Terminals unused in grammar

    ERROR


Grammar

    0 $accept: prog $end

    1 prog: expr SEMICOLON

    2 expr: expr PLUS term
    3     | expr MINUS term
    4     | term

    5 term: term DIV factor
    6     | term MULT factor
    7     | factor

    8 factor: O_PAREN expr C_PAREN
    9       | NUM


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS (258) 2
    MINUS (259) 3
    ERROR (260)
    NUM (261) 9
    DIV (262) 5
    MULT (263) 6
    O_PAREN (264) 8
    C_PAREN (265) 8
    SEMICOLON (266) 1


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    prog (13)
        on left: 1
        on right: 0
    expr (14)
        on left: 2 3 4
        on right: 1 2 3 8
    term (15)
        on left: 5 6 7
        on right: 2 3 4 5 6
    factor (16)
        on left: 8 9
        on right: 5 6 7


State 0

    0 $accept: • prog $end

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    prog    go to state 3
    expr    go to state 4
    term    go to state 5
    factor  go to state 6


State 1

    9 factor: NUM •

    $default  reduce using rule 9 (factor)


State 2

    8 factor: O_PAREN • expr C_PAREN

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    expr    go to state 7
    term    go to state 5
    factor  go to state 6


State 3

    0 $accept: prog • $end

    $end  shift, and go to state 8


State 4

    1 prog: expr • SEMICOLON
    2 expr: expr • PLUS term
    3     | expr • MINUS term

    PLUS       shift, and go to state 9
    MINUS      shift, and go to state 10
    SEMICOLON  shift, and go to state 11


State 5

    4 expr: term •
    5 term: term • DIV factor
    6     | term • MULT factor

    DIV   shift, and go to state 12
    MULT  shift, and go to state 13

    $default  reduce using rule 4 (expr)


State 6

    7 term: factor •

    $default  reduce using rule 7 (term)


State 7

    2 expr: expr • PLUS term
    3     | expr • MINUS term
    8 factor: O_PAREN expr • C_PAREN

    PLUS     shift, and go to state 9
    MINUS    shift, and go to state 10
    C_PAREN  shift, and go to state 14


State 8

    0 $accept: prog $end •

    $default  accept


State 9

    2 expr: expr PLUS • term

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    term    go to state 15
    factor  go to state 6


State 10

    3 expr: expr MINUS • term

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    term    go to state 16
    factor  go to state 6


State 11

    1 prog: expr SEMICOLON •

    $default  reduce using rule 1 (prog)


State 12

    5 term: term DIV • factor

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    factor  go to state 17


State 13

    6 term: term MULT • factor

    NUM      shift, and go to state 1
    O_PAREN  shift, and go to state 2

    factor  go to state 18


State 14

    8 factor: O_PAREN expr C_PAREN •

    $default  reduce using rule 8 (factor)


State 15

    2 expr: expr PLUS term •
    5 term: term • DIV factor
    6     | term • MULT factor

    DIV   shift, and go to state 12
    MULT  shift, and go to state 13

    $default  reduce using rule 2 (expr)


State 16

    3 expr: expr MINUS term •
    5 term: term • DIV factor
    6     | term • MULT factor

    DIV   shift, and go to state 12
    MULT  shift, and go to state 13

    $default  reduce using rule 3 (expr)


State 17

    5 term: term DIV factor •

    $default  reduce using rule 5 (term)


State 18

    6 term: term MULT factor •

    $default  reduce using rule 6 (term)
