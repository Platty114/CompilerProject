/* This is a test file for my scanner */
/* The expected output of all tests can be found in expecte_output.txt */

/* TEST 1 : single line comment, wont show up*/

/* TEST 2: multiline comment
    this will not show up, no
    matter      what I write
*/

/* TEST 3: nested comment
    this will produce a error, but continue scanning
    /* nested comment */

*/

/* TEST 4:
    this is testing if we can detect the keyword int,
    an id main, special characters () , and
    a key word void
*/
int /* TEST 3.5: comment in middle of a line */ main(void) 
{
    /* TEST 5: 
        Number testing
        tests the following things.
            1. can we handle writting a Number (only whole number, since c- dosen't support floats)
            2. can handle a math expression seperated by spaces (line int z = 10 / 5)
            3. can we handle a math expression not seperated by spaces (line int w = 3/1)
            4. can we handle a math expression using id's
            5. can we handle special character ;
        the output in the file should recognize everything, without any errors.
    */

    int x = 999;
    int y = 10;
    int z = 10 / 5;
    int w = 3/1;
    int q = x/y;

    /* TEST 6:
        testing all math expressions.
        well be testing to see if all the operators can be parsed and if () can be handled properly
    */

    /* testing addition, multiplication, division, subtraction*/
    z = 1 + 1;
    z = 2 * z;
    z = z / 2;
    z = z - 1;

    /* testing brackets */

    z = ((1 / 9) + (3 * q));

    /* TEST 7:
        testing all other special characters
        and some illegal ones
    */

    <
    >
    =
    ==
    !=
    ,
    (
    )
    {
    }
    /* illegal, will cause error */
    !

    /* TEST 8:
        testing all other keywords
    */

    int
    void
    if
    return
    while

    /* TEST 9:
        testing illegal identifier names
        by creaing id with a num in it
    */

    int 9num = 9;

    /* TEST 10:
        illegal keyword versions
        all keywords should be lower case, and should give an error otherwise.
        Want to make sure it dosen't get recognized as a id
    */

    Int
    VOID
    whiLE
    iF
    Return

    return;
}